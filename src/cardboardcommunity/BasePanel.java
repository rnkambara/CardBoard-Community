package cardboardcommunity;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Collection;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.awt.Component; 
import java.sql.*;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JToolBar;

//rnkambara@mix.wvu.edu, adentrekin@mix.wvu.edu, arMccalley@mix.wvu.edu
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author rnkambara
 */
public class BasePanel extends javax.swing.JPanel {

    /**
     * Creates new form BasePanel
     */
    public BasePanel() {
        initComponents();
    }
    
    public javax.swing.JComboBox<String> getUserComboBox()
    {
        return userComboBox;
    }
    
    public void fillScrollableArea(Collection<Component> panels)
    {
        for(Component component : scrollPanelBox.getComponents())
        {
            component.setVisible(false);
        }

        if(panels != null)
        {
          for(Component panel : panels)
          {
            scrollPanelBox.add(panel);
            scrollPanelBox.add(new JToolBar.Separator());
          }
        }
    	CardboardCommunity.form.validate();
    }
    
    public void fillUserCheckBox()
    {
        try {
            Statement statement = CardboardCommunity.connection.createStatement();
            statement.executeQuery("SELECT EMAIL FROM MEMBER");
            
            ResultSet userResults = statement.getResultSet();
            
            while(userResults.next())
            {
                userComboBox.addItem(userResults.getString("EMAIL"));
            }
                    
        } catch (SQLException ex) {
            Logger.getLogger(BasePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBar1 = new java.awt.MenuBar();
        menu1 = new java.awt.Menu();
        menu2 = new java.awt.Menu();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel4 = new javax.swing.JPanel();
        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        scrollPanelBox = new javax.swing.JPanel();
        userComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        tab = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        homeButton = new java.awt.Button();
        eventButton = new java.awt.Button();
        groupButton = new java.awt.Button();
        collectionButton = new java.awt.Button();
        jPanel3 = new javax.swing.JPanel();
        globalRatings = new java.awt.Button();
        groupCollection = new java.awt.Button();
        recommendedGames = new java.awt.Button();
        panel1 = new java.awt.Panel();
        labelCardboardCommunity = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        cardboardCommunityIcon = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        cbcIcon = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();

        menu1.setLabel("File");
        menuBar1.add(menu1);

        menu2.setLabel("Edit");
        menuBar1.add(menu2);

        setBackground(new java.awt.Color(101, 95, 123));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(250, 240, 231));

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        scrollPanelBox.setBackground(new java.awt.Color(254, 254, 254));
        scrollPanelBox.setLayout(new javax.swing.BoxLayout(scrollPanelBox, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane1.setViewportView(scrollPanelBox);

        userComboBox.setBackground(new java.awt.Color(254, 254, 254));
        userComboBox.setFont(new java.awt.Font("Waree", 0, 15)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Waree", 1, 15)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(101, 95, 123));
        jLabel1.setText("Select a User");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(103, 103, 103)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 874, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(userComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)))
                .addContainerGap(335, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(userComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 260, 1380, 640));

        jPanel2.setBackground(new java.awt.Color(250, 240, 231));

        tab.setBackground(new java.awt.Color(254, 254, 254));
        tab.setFont(new java.awt.Font("Waree", 1, 15)); // NOI18N

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.Y_AXIS));

        homeButton.setActionCommand("homeButton");
        homeButton.setBackground(new java.awt.Color(101, 95, 123));
        homeButton.setFont(new java.awt.Font("Waree", 1, 18)); // NOI18N
        homeButton.setForeground(new java.awt.Color(254, 254, 254));
        homeButton.setLabel("Home");
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });
        jPanel1.add(homeButton);

        eventButton.setActionCommand("eventButton");
        eventButton.setBackground(new java.awt.Color(101, 95, 123));
        eventButton.setFont(new java.awt.Font("Waree", 1, 18)); // NOI18N
        eventButton.setForeground(new java.awt.Color(254, 254, 254));
        eventButton.setLabel("Events");
        eventButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventButtonActionPerformed(evt);
            }
        });
        jPanel1.add(eventButton);
        eventButton.getAccessibleContext().setAccessibleName("eventButton");

        groupButton.setActionCommand("groupButton");
        groupButton.setBackground(new java.awt.Color(101, 95, 123));
        groupButton.setFont(new java.awt.Font("Waree", 1, 18)); // NOI18N
        groupButton.setForeground(new java.awt.Color(254, 254, 254));
        groupButton.setLabel("Groups");
        groupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                groupButtonActionPerformed(evt);
            }
        });
        jPanel1.add(groupButton);
        groupButton.getAccessibleContext().setAccessibleName("groupButton");

        collectionButton.setActionCommand("collectionButton");
        collectionButton.setBackground(new java.awt.Color(101, 95, 123));
        collectionButton.setFont(new java.awt.Font("Waree", 1, 18)); // NOI18N
        collectionButton.setForeground(new java.awt.Color(254, 254, 254));
        collectionButton.setLabel("Collections");
        collectionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                collectionButtonActionPerformed(evt);
            }
        });
        jPanel1.add(collectionButton);
        collectionButton.getAccessibleContext().setAccessibleName("collectionButton");

        tab.addTab("Main Tab", jPanel1);

        jPanel3.setBackground(new java.awt.Color(254, 254, 254));
        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.Y_AXIS));

        globalRatings.setActionCommand("globalRatings");
        globalRatings.setBackground(new java.awt.Color(101, 95, 123));
        globalRatings.setFont(new java.awt.Font("Waree", 1, 18)); // NOI18N
        globalRatings.setForeground(new java.awt.Color(254, 254, 254));
        globalRatings.setLabel("Global  Ratings");
        globalRatings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                globalRatingsActionPerformed(evt);
            }
        });
        jPanel3.add(globalRatings);
        globalRatings.getAccessibleContext().setAccessibleName("globalRatings");

        groupCollection.setActionCommand("groupCollection");
        groupCollection.setBackground(new java.awt.Color(101, 95, 123));
        groupCollection.setFont(new java.awt.Font("Waree", 1, 18)); // NOI18N
        groupCollection.setForeground(new java.awt.Color(254, 254, 254));
        groupCollection.setLabel("Group Collection");
        groupCollection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                groupCollectionActionPerformed(evt);
            }
        });
        jPanel3.add(groupCollection);
        groupCollection.getAccessibleContext().setAccessibleName("groupCollection");

        recommendedGames.setActionCommand("recommendedGames");
        recommendedGames.setBackground(new java.awt.Color(101, 95, 123));
        recommendedGames.setFont(new java.awt.Font("Waree", 1, 18)); // NOI18N
        recommendedGames.setForeground(new java.awt.Color(254, 254, 254));
        recommendedGames.setLabel("Recommend Games");
        recommendedGames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recommendedGamesActionPerformed(evt);
            }
        });
        jPanel3.add(recommendedGames);

        tab.addTab("\"Unique\"", jPanel3);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(75, Short.MAX_VALUE)
                .addComponent(tab, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addComponent(tab, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(109, 109, 109))
        );

        tab.getAccessibleContext().setAccessibleName("mainTab");

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, 330, 640));

        panel1.setBackground(new java.awt.Color(250, 240, 231));
        panel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelCardboardCommunity.setFont(new java.awt.Font("Ubuntu Condensed", 0, 48)); // NOI18N
        labelCardboardCommunity.setForeground(new java.awt.Color(101, 95, 123));
        labelCardboardCommunity.setText("Cardboard Community");
        panel1.add(labelCardboardCommunity, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 90, -1, -1));

        jSeparator1.setBackground(new java.awt.Color(101, 95, 123));
        panel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 223, 538, 12));
        panel1.add(cardboardCommunityIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 71, -1, 193));

        jSeparator2.setBackground(new java.awt.Color(101, 95, 123));
        panel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(697, 241, 538, -1));
        panel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 170, 450, 10));
        panel1.add(cbcIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));
        panel1.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 160, 450, 10));
        panel1.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 160, 450, 20));
        panel1.add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 180, 450, 20));

        jLabel3.setIcon(new javax.swing.ImageIcon("images/cardboard_community.png")); // NOI18N
        panel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, -1, -1));

        add(panel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 1710, 220));
    }// </editor-fold>//GEN-END:initComponents

    private void groupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_groupButtonActionPerformed
        Collection<Component> panels = null;
        String user = CardboardCommunity.form.getBasePanel().userComboBox.getSelectedItem().toString();
        try {
            panels = groupPanel.readPanels(CardboardCommunity.connection, "MEMBER_EMAIL = '" + user + "'");
            CardboardCommunity.form.getBasePanel().fillScrollableArea(panels);
        } catch (Exception ex) {
            ex.printStackTrace();
            System.out.println("Oops");
        }

    }//GEN-LAST:event_groupButtonActionPerformed

    private void collectionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_collectionButtonActionPerformed
        Collection<Component> panels = null;
        String user = CardboardCommunity.form.getBasePanel().userComboBox.getSelectedItem().toString();
        try {
            panels = CollectionPanel.readPanels(CardboardCommunity.connection, "USER_EMAIL = '" + user + "'");
            CardboardCommunity.form.getBasePanel().fillScrollableArea(panels);
        } catch (Exception ex) {
            ex.printStackTrace();
            System.out.println("Oops");
        }
    }//GEN-LAST:event_collectionButtonActionPerformed

    private void eventButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventButtonActionPerformed
      Collection<Component> panels = null;
      String user = CardboardCommunity.form.getBasePanel().userComboBox.getSelectedItem().toString();
        try {
            panels = EventPanel.readPanels(CardboardCommunity.connection, "ATTENDING_EMAIL = '" + user + "'");
            CardboardCommunity.form.getBasePanel().fillScrollableArea(panels);
        } catch (Exception ex) {
            ex.printStackTrace();
            System.out.println("Oops");
        }
    }//GEN-LAST:event_eventButtonActionPerformed

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed

        try {
            Statement s = CardboardCommunity.connection.createStatement();
            s.execute("SELECT * FROM MEMBER WHERE EMAIL = '" + CardboardCommunity.form.getCurrentUser()+"'");
            ResultSet rs = s.getResultSet();
            LinkedList<Component> list = new LinkedList<Component>();
            userPanel p = new userPanel();
            rs.next();
            p.email = rs.getString("EMAIL");
            p.username = rs.getString("USERNAME");
            p.refresh();
            list.add(p);
            CardboardCommunity.form.getBasePanel().fillScrollableArea(list);
        } catch (SQLException ex) {
            Logger.getLogger(BasePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_homeButtonActionPerformed

    private void globalRatingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_globalRatingsActionPerformed
        Collection<CollectionPanel> c;
        try {
        	Statement s =CardboardCommunity.connection.createStatement();
        	s.executeQuery("SELECT * FROM  BOARD_GAME, GLOBAL_RATINGS\n" + 
        			"WHERE BOARD_GAME.GAME_ID = GLOBAL_RATINGS.GAME_ID");
        	ResultSet rs = s.getResultSet();
        	LinkedList<Component> list = new LinkedList<>();
        	while (rs.next()) {
        		CollectionPanel p = new CollectionPanel();
        		p.game_id = rs.getInt("GAME_ID");
                p.player_count = rs.getInt("PLAYERCOUNT");
                p.name = rs.getString("NAME");
                p.edition = rs.getString("EDITION");
                p.genre = rs.getString("GENRE");
                p.playtime = rs.getInt("PLAYTIME");
                p.rating = (int) rs.getDouble("G_RATING");
                p.refresh(true);
                list.add(p);
                
        	}
        	CardboardCommunity.form.getBasePanel().fillScrollableArea(list);
        }catch(Exception e) {
        	System.out.println("Monkey says oops");
        }
    }//GEN-LAST:event_globalRatingsActionPerformed

    private void groupCollectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_groupCollectionActionPerformed
    	try {
    		String user = CardboardCommunity.form.getBasePanel().userComboBox.getSelectedItem().toString();
    		Statement s =CardboardCommunity.connection.createStatement();
    		s.executeQuery("SELECT *\n" + 
    				"from BOARD_GAME BG\n" + 
    				"WHERE EXISTS "
    				+ "(SELECT * FROM GROUP_COLLECTION GC, MEMBER_OF MO WHERE GC.GAME_ID = BG.GAME_ID"
    				+ "	AND MO.GROUP_ID = GC.GROUP_ID"
    				+ " AND MO.MEMBER_EMAIL = '" + user + "' )");
    		ResultSet rs = s.getResultSet();
        	LinkedList<Component> list = new LinkedList<>();
        	while (rs.next()) {
        		CollectionPanel p = new CollectionPanel();
        		p.game_id = rs.getInt("GAME_ID");
                p.player_count = rs.getInt("PLAYERCOUNT");
                p.name = rs.getString("NAME");
                p.edition = rs.getString("EDITION");
                p.genre = rs.getString("GENRE");
                p.playtime = rs.getInt("PLAYTIME");
                p.refresh(false);
                list.add(p);
                
        	}
        	CardboardCommunity.form.getBasePanel().fillScrollableArea(list);
    	}
    	catch(Exception E) {
    		System.out.println(E.getMessage());
    	}
    }//GEN-LAST:event_groupCollectionActionPerformed

    private void recommendedGamesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recommendedGamesActionPerformed
    	try {
    		String user = CardboardCommunity.form.getBasePanel().userComboBox.getSelectedItem().toString();
    		Statement s =CardboardCommunity.connection.createStatement();
    		s.executeQuery("SELECT *\n" + 
    				"FROM GLOBAL_RATINGS NATURAL JOIN \n" + 
    				" (SELECT * \n" + 
    				"  FROM BOARD_GAME B\n" + 
    				"  WHERE NOT EXISTS (SELECT * \n" + 
    				"                 FROM MEMBER_OF M, GROUP_COLLECTION C \n" + 
    				"                 WHERE M.MEMBER_EMAIL = '"+ user + "' AND\n" + 
    				"                 M.GROUP_ID = C.GROUP_ID AND \n" + 
    				"                 C.GAME_ID = B.GAME_ID)) \n" + 
    				"ORDER BY G_RATING DESC");
    		ResultSet rs = s.getResultSet();
        	LinkedList<Component> list = new LinkedList<>();
        	while (rs.next()) {
        		CollectionPanel p = new CollectionPanel();
        		p.game_id = rs.getInt("GAME_ID");
                p.player_count = rs.getInt("PLAYERCOUNT");
                p.name = rs.getString("NAME");
                p.edition = rs.getString("EDITION");
                p.genre = rs.getString("GENRE");
                p.playtime = rs.getInt("PLAYTIME");
                p.refresh(false);
                list.add(p);
                
        	}
        	CardboardCommunity.form.getBasePanel().fillScrollableArea(list);
    	}
    	catch(Exception E) {
    		System.out.println(E.getMessage());
    	}
    }//GEN-LAST:event_recommendedGamesActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel cardboardCommunityIcon;
    private javax.swing.JLabel cbcIcon;
    private java.awt.Button collectionButton;
    private java.awt.Button eventButton;
    private java.awt.Button globalRatings;
    private java.awt.Button groupButton;
    private java.awt.Button groupCollection;
    private java.awt.Button homeButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JLabel labelCardboardCommunity;
    private java.awt.Menu menu1;
    private java.awt.Menu menu2;
    private java.awt.MenuBar menuBar1;
    private java.awt.Panel panel1;
    private java.awt.Button recommendedGames;
    private javax.swing.JPanel scrollPanelBox;
    private javax.swing.JTabbedPane tab;
    private javax.swing.JComboBox<String> userComboBox;
    // End of variables declaration//GEN-END:variables
}
